create database todoapp;

use todoapp;

create table countries
(
country_id int not null auto_increment primary key,
country varchar(30) not null unique key
);

create table status
(
status_id int not null auto_increment primary key,
status varchar(10) not null unique key
);

insert into countries 
(country)
values
('Bharat'),('UK'),('US'),('Australia'),('China'),('Shrilanka');

insert into status 
(status)
values
('Active'),('Inactive'),('Closed'),('Blocked'),('Deleted'),('Done'),
('Accepted'),('Declined'),('Pending'),('Removed');


#10May2020
create table todotypes
(
todotype_id int not null auto_increment primary key,
todotype varchar(30) not null unique
);

insert into todotypes (todotype) values ('Text Note'),('Check List'),('Numbered List');

create table users
(
user_id int not null primary key auto_increment,
user_name varchar(30) not null,
email varchar(60) not null unique,
password varchar(12) not null,
created datetime not null,
country_id int,
constraint fk_user_countries foreign key (country_id) references countries (country_id),
status_id int not null default 2,
constraint fk_users_status foreign key (status_id) references status (status_id)
);

##05May2020
alter table users add column mobile varchar(10) not null unique after country_id;

##06May2020
select password,status_id,user_id,user_name,created,mobile,
u.country_id,country from users as u inner join countries as c 
where email='abc@gmail.com' and u.country_id=c.country_id;

alter table users change column password password varchar(100) not null;

##07May2020
alter table users add column activation_code varchar(50);

update users set status_id=1 where email=? and activation_code=?

alter table users add column profpic varchar(60) after mobile;

update users set profpic=? where user_id=?


create table todolist
(
todolist_id int not null auto_increment primary key,
title varchar(45) not null,
created datetime not null,
user_id int not null,
constraint fk_todolist_users foreign key (user_id) references users (user_id),
status_id int not null default 1,
constraint fk_todolist_status foreign key (status_id) references status (status_id)
);

select todolist_id,title,created from todolist where user_id=? and status_id=1;


insert into todolist (title,created,user_id,todotype_id) value (?,?,?,?);

select * from todolist where todolist_id=?

alter table todolist 
add column todotype_id int not null,
add constraint fk_todolist_todotypes 
foreign key (todotype_id) 
references todotypes (todotype_id);


alter table todolist 
add column textnote varchar(5000); 


insert into todolist (title,user_id,todotype_id,textnote) value (?,?,?,?);

create table todosteps
(
todostep_id int not null auto_increment primary key,
todostep varchar(100) not null,
todolist_id int not null,
status_id int not null default 1,
constraint fk_todosteps_todolist foreign key (todolist_id) references todolist (todolist_id),
constraint fk_todosteps_status foreign key (status_id) references status (status_id)
);

alter table todosteps add column sequence int not null after todostep_id;

insert into todosteps (sequence,todostep,todolist_id) value (?,?,?)

alter table todosteps drop column sequence;

create table connects
(
connect_id int not null auto_increment primary key,
a_user_id int not null,
b_user_id int not null,
status_id int not null default 9,
constraint fk_connects_status foreign key (status_id) references status (status_id),
constraint fk_connects_users_a foreign key (a_user_id) references users (user_id),
constraint fk_connects_users_b foreign key (b_user_id) references users (user_id)
);

select todostep_id,todostep from todosteps where todolist_id=? and status_id=1


create table todo_teams
(
todo_team_id int not null primary key auto_increment,
todolist_id int not null,
user_id int not null,
status_id int not null default 1,
constraint fk_todoteams_todolist foreign key (todolist_id) references todolist (todolist_id),
constraint fk_todoteams_status foreign key (status_id) references status (status_id),
constraint fk_todoteams_users foreign key (user_id) references users (user_id)
);

insert into connects (a_user_id,b_user_id,status_id)
values 
(2,3,7),(2,4,7),(2,5,7);

alter table connects drop foreign key fk_connects_users_a;
alter table connects drop foreign key fk_connects_users_b;
alter table connects drop index fk_connects_users_a;
alter table connects drop index fk_connects_users_b;

alter table connects change column a_user_id from_user_id int not null,
add constraint fk_connects_users_a foreign key (from_user_id)
references users (user_id);

alter table connects change column b_user_id to_user_id int not null,
add constraint fk_connects_users_b foreign key (to_user_id)
references users (user_id);


select 
connect_id,from_user_id,u1.user_name,u1.email,u1.created,
t1.country,u1.mobile,u1.profpic,to_user_id,u2.user_name,
u2.email,u2.created,t2.country,u2.mobile,u2.profpic
from
connects as c inner join users as u1
inner join users as u2 inner join countries as t1 
inner join countries as t2
where 
c.from_user_id=u1.user_id and c.to_user_id=u2.user_id and
u1.country_id=t1.country_id and u2.country_id=t2.country_id
and c.status_id=7 and (from_user_id=? or to_user_id=?);


select connect_id,u1.user_name,u1.email,u1.created,c1.country,u1.mobile,
u1.profpic,u2.user_name,u2.email,u2.created,c2.country,u2.mobile,u2.profpic 
from connects as c inner join users as u1 inner join users as u2 inner join 
countries as c1 inner join countries as c2 
where c.from_user_id=u1.user_id and c.to_user_id=u2.user_id and 
u1.country_id=c1.country_id and u2.country_id=c2.country_id and 
c.status_id=9 and (c.from_user_id=3 or c.to_user_id=3);

create table todoshare
(
todoshare_id int auto_increment primary key,
todolist_id int not null,
user_id int not null,
constraint fk_todoshare_todolist foreign key (todolist_id) references todolist (todolist_id),
constraint fk_todoshare_users foreign key (user_id) references users (user_id)
);












